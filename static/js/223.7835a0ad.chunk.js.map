{"version":3,"file":"static/js/223.7835a0ad.chunk.js","mappings":"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","sources":["pages/Profile/OtherProfile.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useRecoilValue } from 'recoil';\nimport { UserAtom } from '../../Store/userInfoAtoms';\n\nimport { MoreNav } from '../../components/Common/TopNav';\nimport PostList from '../../components/Common/PostList/PostList';\nimport MiniClassList from '../../components/Common/MiniClassList';\nimport NormalizeImage from '../../components/Common/NormalizeImage';\n\nimport HomeLogo from '../../assets/img/home-logo.svg';\nimport ShareImg from '../../assets/img/icon-share.svg';\nimport ChatImg from '../../assets/img/icon-chat-mini.svg';\nimport ImageMore from '../../assets/img/icon-img-more.svg';\n\nimport {\n  MainWrap,\n  WrapBtn,\n  Wrap,\n  ProfileSection,\n  ProfilePage,\n  PostSection,\n  ClassSection,\n  ClassListUl,\n  Title,\n  PostListUl,\n  FollowBtn,\n} from './ProfileStyle';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport MenuBar from '../../components/Common/MenuBar';\nimport PostListBtnOn from '../../assets/img/icon-post-list-on.svg';\nimport PostListBtnOff from '../../assets/img/icon-post-list-off.svg';\nimport PostAlbumBtnOn from '../../assets/img/icon-post-album-on.svg';\nimport PostAlbumBtnOff from '../../assets/img/icon-post-album-off.svg';\nimport ProfileSkeleton from '../../components/Common/Skeleton/ProfileSkeleton';\nexport default function Profile() {\n  const navigate = useNavigate();\n\n  const userInfo = useRecoilValue(UserAtom);\n  const token = userInfo.token;\n\n  const { accountname } = useParams();\n  const [profileData, setProfileData] = useState(null);\n  const [classData, setClassData] = useState(null);\n  const [postData, setPostData] = useState(null);\n  const [postUpdated, setPostUpdated] = useState(false);\n  const [isListBtnActive, setListBtnActive] = useState(true);\n  const [isImgListBtnActive, setImgListBtnActive] = useState(false);\n  const [classUpdated, setClassUpdated] = useState(false);\n  const [isfollow, SetIsfollow] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const userProfileData = await ProfileData(accountname, token);\n        const userClassData = await fetchDataFromAPI(\n          ClassData,\n          accountname,\n          token,\n        );\n        const userPostData = await fetchDataFromAPI(\n          PostData,\n          accountname,\n          token,\n        );\n        setProfileData(userProfileData);\n        setClassData(userClassData);\n        setPostData(userPostData);\n        SetIsfollow(userProfileData.isfollow);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, [accountname, token]);\n\n  const fetchDataFromAPI = async (apiFunction, ...params) => {\n    try {\n      const data = await apiFunction(...params);\n      return data;\n    } catch (error) {\n      console.log(error);\n      return null;\n    }\n  };\n  const handleCopy = () => {\n    const apiUrl = window.location.href; // Current URL\n    if (navigator.clipboard && navigator.clipboard.writeText) {\n      navigator.clipboard\n        .writeText(apiUrl)\n        .then(() => {\n          alert('주소가 복사되었습니다.');\n        })\n        .catch((error) => {\n          console.error('Failed to copy URL:', error);\n        });\n    } else {\n      // Fallback for browsers that do not support the Clipboard API\n      const tempInput = document.createElement('textarea');\n      tempInput.value = apiUrl;\n      document.body.appendChild(tempInput);\n      tempInput.select();\n      document.execCommand('copy');\n      document.body.removeChild(tempInput);\n      alert('주소가 복사되었습니다.');\n    }\n  };\n  const navigateToFollowers = () => {\n    navigate(`/other_profile/${accountname}/follower`, { state: accountname });\n  };\n\n  const navigateToFollowing = () => {\n    navigate(`/other_profile/${accountname}/following`, { state: accountname });\n  };\n\n  const handleFollowClick = async () => {\n    try {\n      if (isfollow) {\n        const response = await unfollow(accountname, token);\n        if (response) {\n          SetIsfollow(false);\n        } else {\n        }\n      } else {\n        const response = await follow(accountname, token);\n        if (response) {\n          SetIsfollow(true);\n        } else {\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handlePostImgClick = (postId) => {\n    navigate(`/post/${postId}`, { state: postId });\n  };\n  const handleButtonClick = (btnName) => {\n    if (btnName === 'listBtn') {\n      setListBtnActive(true);\n      setImgListBtnActive(false);\n    } else if (btnName === 'imgListBtn') {\n      setListBtnActive(false);\n      setImgListBtnActive(true);\n    }\n  };\n  return (\n    <ProfilePage>\n      <MoreNav />\n      <MainWrap>\n        {!profileData || !classData || !postData ? (\n          <ProfileSkeleton status='other' />\n        ) : (\n          <>\n            <ProfileSection>\n              <Wrap>\n                <div className='follow'>\n                  <button onClick={navigateToFollowers}>\n                    <p>{profileData.followerCount}</p>\n                    <p className='followNum'>followers</p>\n                  </button>\n                </div>\n                <img\n                  src={NormalizeImage(profileData.image)}\n                  id='profileImg'\n                  alt='프로필 이미지'\n                />\n                <div className='follow'>\n                  <button onClick={navigateToFollowing}>\n                    <p>{profileData.followingCount}</p>\n                    <p className='followNum'>followings</p>\n                  </button>\n                </div>\n              </Wrap>\n              <div id='usernameWrap'>\n                <p id='NickName'>{profileData.username}</p>{' '}\n                <span\n                  className={\n                    profileData.accountname &&\n                    profileData.accountname.includes('Teacher')\n                      ? ''\n                      : 'a11y-hidden'\n                  }\n                ></span>\n              </div>\n              <p id='MandleId'>\n                @\n                {(profileData.accountname &&\n                  profileData.accountname.includes('Teacher')) ||\n                (profileData.accountname &&\n                  profileData.accountname.includes('Student'))\n                  ? profileData.accountname.substr(7)\n                  : profileData.accountname}\n              </p>\n              <p id='Introduce'>{profileData.intro}</p>\n              <WrapBtn>\n                <Link to='/chat/chatroom'>\n                  <button className='ChatBtn'>\n                    <img src={ChatImg} alt='채팅 아이콘 이미지' />\n                  </button>\n                </Link>\n                {/* <FollowBtn\n                className={isfollow ? 'following' : ''}\n                onClick={handleFollowClick}\n              >\n                {isfollow ? '취소' : '팔로우'}\n              </FollowBtn> */}\n                <FollowBtn\n                  className={isfollow ? 'following' : ''}\n                  onClick={handleFollowClick}\n                >\n                  {isfollow ? '취소' : '팔로우'}\n                </FollowBtn>\n                {!isfollow && (\n                  <span className={isfollow ? 'a11y-hidden' : 'toolTip'}>\n                    친구 추가하고 소식을 받아보세요~\n                  </span>\n                )}\n                <button className='ShareBtn' onClick={handleCopy}>\n                  <img src={ShareImg} alt='공유 아이콘 이미지' />\n                </button>\n              </WrapBtn>\n            </ProfileSection>\n            <ClassSection\n              className={\n                profileData &&\n                profileData.accountname &&\n                profileData.accountname.includes('Teacher')\n                  ? ''\n                  : 'a11y-hidden'\n              }\n            >\n              <Title>클래스 리스트</Title>\n              <ClassListUl>\n                {profileData &&\n                  profileData.accountname &&\n                  profileData.accountname.includes('Teacher') &&\n                  classData.product &&\n                  classData.product.map((classItem, index) => (\n                    <MiniClassList\n                      key={classItem.id}\n                      token={token}\n                      classItem={classItem}\n                      page='profile'\n                      setClassUpdated={setClassUpdated}\n                    />\n                  ))}\n              </ClassListUl>\n            </ClassSection>\n            <PostSection>\n              <div id='PostBtnWrap'>\n                <button\n                  id='ListBtn'\n                  onClick={() => handleButtonClick('listBtn')}\n                  className={isListBtnActive ? 'active' : ''}\n                >\n                  <img\n                    src={isListBtnActive ? PostListBtnOn : PostListBtnOff}\n                    alt='포스트리스트 버튼'\n                  />\n                </button>\n                <button\n                  id='ImgListBtn'\n                  onClick={() => handleButtonClick('imgListBtn')}\n                  className={isImgListBtnActive ? 'active' : ''}\n                >\n                  <img\n                    src={isImgListBtnActive ? PostAlbumBtnOn : PostAlbumBtnOff}\n                    alt='포스트 앨범 버튼'\n                  />\n                </button>\n                <span></span>\n              </div>\n              <PostListUl>\n                {isListBtnActive && postData && postData.post && (\n                  <div className={postData.post.length > 0 ? '' : 'posts-none'}>\n                    {postData.post.length > 0 ? (\n                      postData.post.map((post) => (\n                        <PostList\n                          key={post.id}\n                          setPostUpdated={setPostUpdated}\n                          post={post}\n                        />\n                      ))\n                    ) : (\n                      <div className='post-none'>\n                        <img src={HomeLogo} alt='포스트가 없습니다' />\n                        <p>작성된 게시물이 없습니다</p>\n                      </div>\n                    )}\n                  </div>\n                )}\n                {isImgListBtnActive && postData && postData.post && (\n                  <div className='image-grid'>\n                    {postData.post.map((post) => {\n                      // 게시물에 이미지가 있는지 확인\n                      const hasImage = post.image && post.image.split(',')[0];\n                      const handleAlbumBtnClick = () => {\n                        navigate(`/post/${post.id}`, { state: post.id });\n                      };\n                      // 이미지가 있는 게시물만 렌더링\n                      if (hasImage) {\n                        return (\n                          <button key={post.id} onClick={handleAlbumBtnClick}>\n                            <div>\n                              <img\n                                src={post.image.split(',')[0]}\n                                alt='포스트 이미지'\n                              />\n                              {post.image.split(',')[1] && (\n                                <div className='icon-overlay'>\n                                  <img\n                                    src={ImageMore}\n                                    alt='여러 장 이미지 아이콘'\n                                  />\n                                </div>\n                              )}\n                            </div>\n                          </button>\n                        );\n                      } else {\n                        return null; // 이미지가 없는 게시물은 렌더링하지 않음\n                      }\n                    })}\n                    {postData.post.length === 0 && (\n                      <div>\n                        <img src={HomeLogo} alt='포스트 이미지가 없습니다' />\n                        <p>작성된 게시물 이미지가 없습니다</p>\n                      </div>\n                    )}\n                  </div>\n                )}\n              </PostListUl>\n            </PostSection>\n          </>\n        )}\n      </MainWrap>\n      <MenuBar />\n    </ProfilePage>\n  );\n}\n\nasync function ProfileData(accountname, token) {\n  const url = `https://api.mandarin.weniv.co.kr/profile/${accountname}`;\n\n  try {\n    const res = await axios.get(url, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-type': 'application/json',\n      },\n    });\n    return res.data.profile;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n}\nasync function ClassData(accountname, token) {\n  const url = `https://api.mandarin.weniv.co.kr/product/${accountname}`;\n\n  try {\n    const res = await axios.get(url, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-type': 'application/json',\n      },\n    });\n    return res.data;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n}\nasync function PostData(accountname, token) {\n  const url = `https://api.mandarin.weniv.co.kr/post/${accountname}/userpost`;\n\n  try {\n    const res = await axios.get(url, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-type': 'application/json',\n      },\n    });\n    return res.data;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n}\nasync function follow(accountname, token) {\n  const url = `https://api.mandarin.weniv.co.kr/profile/${accountname}/follow`;\n\n  try {\n    const res = await axios.post(\n      url,\n      {},\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-type': 'application/json',\n        },\n      },\n    );\n    return res.data; // Modify this based on the actual response structure\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n}\n\nasync function unfollow(accountname, token) {\n  const url = `https://api.mandarin.weniv.co.kr/profile/${accountname}/unfollow`;\n\n  try {\n    const res = await axios.delete(url, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-type': 'application/json',\n      },\n    });\n    return res.data; // Modify this based on the actual response structure\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n}\n"],"names":["Profile","navigate","useNavigate","token","useRecoilValue","UserAtom","accountname","useParams","_useState","useState","_useState2","_slicedToArray","profileData","setProfileData","_useState3","_useState4","classData","setClassData","_useState5","_useState6","postData","setPostData","_useState7","_useState8","setPostUpdated","_useState9","_useState10","isListBtnActive","setListBtnActive","_useState11","_useState12","isImgListBtnActive","setImgListBtnActive","_useState13","_useState14","setClassUpdated","_useState15","_useState16","isfollow","SetIsfollow","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userProfileData","userClassData","userPostData","wrap","_context","prev","next","ProfileData","sent","fetchDataFromAPI","ClassData","PostData","t0","console","log","stop","apply","arguments","_ref2","_callee2","apiFunction","_len","params","_key","data","_args2","_context2","length","Array","abrupt","_x","handleFollowClick","_ref3","_callee3","_context3","unfollow","follow","handleButtonClick","btnName","_jsxs","ProfilePage","children","_jsx","MoreNav","MainWrap","_Fragment","ProfileSection","Wrap","className","onClick","concat","state","followerCount","src","NormalizeImage","image","id","alt","followingCount","username","includes","substr","intro","WrapBtn","Link","to","ChatImg","FollowBtn","apiUrl","window","location","href","navigator","clipboard","writeText","then","alert","catch","error","tempInput","document","createElement","value","body","appendChild","select","execCommand","removeChild","ShareImg","ClassSection","Title","ClassListUl","product","map","classItem","index","MiniClassList","page","PostSection","PostListBtnOn","PostListBtnOff","PostAlbumBtnOn","PostAlbumBtnOff","PostListUl","post","PostList","HomeLogo","split","ImageMore","ProfileSkeleton","status","MenuBar","_x2","_x3","_ProfileData","_callee4","url","res","_context4","axios","get","headers","Authorization","profile","_x4","_x5","_ClassData","_callee5","_context5","_x6","_x7","_PostData","_callee6","_context6","_x8","_x9","_follow","_callee7","_context7","_x10","_x11","_unfollow","_callee8","_context8","delete"],"sourceRoot":""}