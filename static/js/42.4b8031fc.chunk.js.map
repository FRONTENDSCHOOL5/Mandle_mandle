{"version":3,"file":"static/js/42.4b8031fc.chunk.js","mappings":"0HAmCA,IAAe,IAA0B,mE,gGC/B1B,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACEC,EAAAA,EAAAA,KAAA,UAAQC,QALK,WACbH,GAAU,EACZ,EAG0BI,UACtBF,EAAAA,EAAAA,KAAA,OAAKG,IAAKC,EAAAA,EAAWC,IAAI,iDAG/B,C,8ICdaC,EAAiBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mNAW3BC,EAAcJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gwB,SCPtB,SAASG,IACtB,IAAMf,GAAWC,EAAAA,EAAAA,MACjB,OACEe,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAb,SAAA,EACEF,EAAAA,EAAAA,KAACgB,EAAAA,GAAO,KACRF,EAAAA,EAAAA,MAACR,EAAc,CAAAJ,SAAA,EACbY,EAAAA,EAAAA,MAACH,EAAW,CACVV,QAAS,WACPH,EAAS,iBACX,EAAEI,SAAA,EAEFF,EAAAA,EAAAA,KAAA,OAAKG,IAAKc,EAAAA,EAAYZ,IAAI,qDAAaa,SAAS,KAChDJ,EAAAA,EAAAA,MAAA,OAAKK,UAAU,OAAMjB,SAAA,EACnBF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,8BACNY,EAAAA,EAAAA,MAAA,OAAKK,UAAU,WAAUjB,SAAA,EACvBF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,iHACHF,EAAAA,EAAAA,KAAA,OAAKmB,UAAU,OAAMjB,SAAC,yBAI5BY,EAAAA,EAAAA,MAACH,EAAW,CACVV,QAAS,WACPH,EAAS,iBACX,EAAEI,SAAA,EAEFF,EAAAA,EAAAA,KAAA,OAAKG,IAAKc,EAAAA,EAAYZ,IAAI,wDAC1BS,EAAAA,EAAAA,MAAA,OAAKK,UAAU,OAAMjB,SAAA,EACnBF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,8BACNY,EAAAA,EAAAA,MAAA,OAAKK,UAAU,WAAUjB,SAAA,EACvBF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,4JACHF,EAAAA,EAAAA,KAAA,OAAKmB,UAAU,OAAMjB,SAAC,yBAI5BY,EAAAA,EAAAA,MAACH,EAAW,CACVV,QAAS,WACPH,EAAS,iBACX,EAAEI,SAAA,EAEFF,EAAAA,EAAAA,KAAA,OAAKG,IAAKc,EAAAA,EAAYZ,IAAI,wDAC1BS,EAAAA,EAAAA,MAAA,OAAKK,UAAU,OAAMjB,SAAA,EACnBF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,iDACNY,EAAAA,EAAAA,MAAA,OAAKK,UAAU,WAAUjB,SAAA,EACvBF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,gGAEHF,EAAAA,EAAAA,KAAA,OAAKmB,UAAU,OAAMjB,SAAC,4BAK9BF,EAAAA,EAAAA,KAACoB,EAAAA,EAAO,MAGd,C","sources":["assets/img/icon-arrow-left.svg","components/Common/GoBackButton.jsx","pages/Chatting/ChatListStyle.jsx","pages/Chatting/ChatList.jsx"],"sourcesContent":["var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgIconArrowLeft(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 22,\n    height: 22,\n    viewBox: \"0 0 22 22\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.4167 11H4.58333\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11 17.4167L4.58333 11L11 4.58334\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconArrowLeft);\nexport default __webpack_public_path__ + \"static/media/icon-arrow-left.d2f853c69661a4cb3407f6503b997112.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport ArrowIcon from '../../assets/img/icon-arrow-left.svg';\n\nexport default function GoBackButton() {\n  const navigate = useNavigate();\n\n  const goBack = () => {\n    navigate(-1);\n  };\n\n  return (\n    <button onClick={goBack}>\n      <img src={ArrowIcon} alt='뒤로가기 아이콘' />\n    </button>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ChatListLayout = styled.div`\n  width: var(--basic-width);\n  height: var(--screen-nav-height);\n  background-color: white;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  ::-webkit-scrollbar {\n    background-color: white;\n  }\n`;\n\nexport const ChatListBox = styled.div`\n  height: 66px;\n  display: flex;\n  align-items: center;\n  background-color: white;\n  cursor: pointer;\n\n  img {\n    width: 42px;\n    height: 42px;\n    margin: 0 16px;\n  }\n\n  .text {\n    flex: 1;\n  }\n\n  span {\n    display: block;\n    height: 19px;\n    font-weight: bold;\n    font-size: var(--font--size-md);\n  }\n\n  .chatInfo {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  p {\n    display: inline-block;\n    height: 16px;\n    line-height: 16px;\n    font-size: var(--font-md);\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    width: 220px;\n    color: var(--sub-font-color);\n  }\n\n  .date {\n    color: var(--border-color);\n    font-size: 10px;\n    margin-right: 7px;\n  }\n`;\n","import React from 'react';\nimport { MoreNav } from '../../components/Common/TopNav';\nimport { useNavigate } from 'react-router-dom';\nimport profileimg from '../../assets/img/mini-basic-progile-img.svg';\nimport MenuBar from '../../components/Common/MenuBar';\nimport { ChatListLayout, ChatListBox } from './ChatListStyle';\nexport default function ChatList() {\n  const navigate = useNavigate();\n  return (\n    <>\n      <MoreNav />\n      <ChatListLayout>\n        <ChatListBox\n          onClick={() => {\n            navigate('/chat/chatroom');\n          }}\n        >\n          <img src={profileimg} alt='유저 프로필 이미지' confirm={true} />\n          <div className='text'>\n            <span>뽀송뽀송</span>\n            <div className='chatInfo'>\n              <p>안녕하세요 어떤 디자인 비누들이 있나요?</p>\n              <div className='date'>2023.06.17</div>\n            </div>\n          </div>\n        </ChatListBox>\n        <ChatListBox\n          onClick={() => {\n            navigate('/chat/chatroom');\n          }}\n        >\n          <img src={profileimg} alt='유저 프로필 이미지' />\n          <div className='text'>\n            <span>만들러버</span>\n            <div className='chatInfo'>\n              <p>만드는게 세상에서 제일 재밌어요. 다음주에도 수강할게요</p>\n              <div className='date'>2023.06.15</div>\n            </div>\n          </div>\n        </ChatListBox>\n        <ChatListBox\n          onClick={() => {\n            navigate('/chat/chatroom');\n          }}\n        >\n          <img src={profileimg} alt='유저 프로필 이미지' />\n          <div className='text'>\n            <span>금손이 되고싶어</span>\n            <div className='chatInfo'>\n              <p>곰돌이 쿠키 디자인이 너무 예뻐요!!</p>\n\n              <div className='date'>2023.06.11</div>\n            </div>\n          </div>\n        </ChatListBox>\n      </ChatListLayout>\n      <MenuBar />\n    </>\n  );\n}\n"],"names":["GoBackButton","navigate","useNavigate","_jsx","onClick","children","src","ArrowIcon","alt","ChatListLayout","styled","div","_templateObject","_taggedTemplateLiteral","ChatListBox","_templateObject2","ChatList","_jsxs","_Fragment","MoreNav","profileimg","confirm","className","MenuBar"],"sourceRoot":""}