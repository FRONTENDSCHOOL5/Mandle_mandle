{"version":3,"file":"static/js/192.ed03205c.chunk.js","mappings":"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","sources":["api/GetClassDetailInfoData.jsx","components/Common/Dropdown/DropdownDate.jsx","components/Common/Dropdown/DropItem.jsx","components/Common/Dropdown/Dropdown.jsx","api/PostUploadPost.jsx","pages/Posting/Posting.jsx","Hooks/useDetectClose.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport default async function GetClassDetailData(id, token) {\n  try {\n    const response = await axios.get(\n      `https://api.mandarin.weniv.co.kr/product/detail/${id}`,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      },\n    );\n\n    return response.data.product;\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport const DropdownP = styled.p`\n  font-size: 12px;\n  color: var(--sub-font-color);\n`;\n\nexport default function DropdownDate(props) {\n  const { date, time } = props;\n  return (\n    <DropdownP>\n      {date}/{time}\n    </DropdownP>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport DropdownDate from './DropdownDate';\nconst DropdownItem = styled.li`\n  cursor: pointer;\n  border-bottom: 1px solid var(--border-color);\n  display: flex;\n  align-items: center;\n  &:hover {\n    background-color: #f7f7f7;\n  }\n`;\n\nexport const DropdonwTextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n`;\n\nexport const ImageBox = styled.img`\n  width: 52px;\n  height: 52px;\n  object-fit: cover;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  margin: 10px;\n`;\n\nexport default function DropItem(props) {\n  const {\n    value,\n    setClassIdentify,\n    date,\n    time,\n    setClassImg,\n    setSelectDate,\n    setSelectTime,\n    img,\n    setIsOpen,\n    isOpen,\n  } = props;\n  const handleItemClick = () => {\n    setClassIdentify(value);\n    setClassImg(img);\n    setSelectDate(date);\n    setSelectTime(time);\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <>\n      <DropdownItem onClick={handleItemClick}>\n        <ImageBox src={img} />\n        <DropdonwTextContainer>\n          {value}\n          <DropdownDate date={date} time={time} />\n        </DropdonwTextContainer>\n      </DropdownItem>\n    </>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport DropdownItem from './DropItem';\nimport { ImageBox } from './DropItem';\n\nconst DropdownContainer = styled.div`\n  width: 358px;\n  height: 100%;\n  position: relative;\n  margin: 0 auto;\n  margin-top: 16px;\n`;\n\nconst DropdownButton = styled.button`\n  width: 100%;\n  height: 100%;\n  background-color: white;\n  border: 1px solid var(--sub-font-color);\n  text-align: left;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n`;\n\nconst DropdownMenu = styled.ul`\n  position: absolute;\n  top: 100%;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  border: 1px solid #ccc;\n  background-color: white;\n  z-index: 1000;\n`;\n\nexport default function Dropdown(props) {\n  const {\n    value,\n    setClassIdentify,\n    setSelectDate,\n    setSelectTime,\n    date,\n    time,\n    setClassImg,\n    img,\n    setIsOpen,\n    isOpen,\n  } = props;\n\n  return (\n    <>\n      <DropdownItem\n        value={value}\n        setClassIdentify={setClassIdentify}\n        setClassImg={setClassImg}\n        img={img}\n        setIsOpen={setIsOpen}\n        isOpen={isOpen}\n        date={date}\n        setSelectDate={setSelectDate}\n        setSelectTime={setSelectTime}\n        time={time}\n      />\n    </>\n  );\n}\n\nexport { DropdownContainer, DropdownButton, DropdownMenu, ImageBox };\n","import axios from 'axios';\n\nexport default async function PutPostEdit(token, content, images) {\n  try {\n    const response = await axios.post(\n      `https://api.mandarin.weniv.co.kr/post`,\n      {\n        post: {\n          content: content,\n          image: images,\n        },\n      },\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-type': 'application/json',\n        },\n      },\n    );\n\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n  return null;\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport Dropdown from '../../components/Common/Dropdown/Dropdown';\nimport useDetectClose from '../../Hooks/useDetectClose';\nimport {\n  DropdownContainer,\n  DropdownButton,\n  DropdownMenu,\n  ImageBox,\n} from '../../components/Common/Dropdown/Dropdown';\nimport DropdownDate from '../../components/Common/Dropdown/DropdownDate';\nimport { DropdonwTextContainer } from '../../components/Common/Dropdown/DropItem';\nimport {\n  DisabledUploadBtnNav,\n  ProfileContainer,\n  ProfileImage,\n  FileUploadButton,\n  ImgWrapStyle,\n  PreviewImgWrapStyle,\n  DeleteImgBtn,\n  PostFormStyle,\n  ImagePreview,\n  TextInputContainer,\n} from './PostingStyle';\nimport whiteImg from '../../assets/img/whiteImg.webp';\n\nimport { useRecoilValue } from 'recoil';\nimport { UserAtom } from '../../Store/userInfoAtoms';\nimport { PostImagesUpload } from '../../api/PostImagesUpload';\nimport { useNavigate } from 'react-router-dom';\nimport PostUploadPost from '../../api/PostUploadPost';\nimport { GetUserProfileImage } from '../../api/GetUserProfileImage';\nimport imageCompression from 'browser-image-compression';\nimport useTextareaResize from '../../Hooks/useTextareaResizeHook';\nimport GetClassDetailInfoData from '../../api/GetClassDetailInfoData';\n\nexport default function Posting() {\n  const [selectedImages, setSelectedImages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [buttonStyle, setButtonStyle] = useState(false);\n  const [userImage, setUserImage] = useState('');\n\n  const userInfo = useRecoilValue(UserAtom);\n  const resData = JSON.parse(localStorage.getItem('resInfo'))[userInfo.id]; // 리코일에 저장된 클래스 id 값\n\n  const dropDownRef = useRef();\n  const [classIdentify, setClassIdentify] = useState('클래스 선택하기'); //  선택한 클래스 정보 상태를 담을 status\n  const [selectDate, setSelectDate] = useState('');\n  const [selectTime, setSelectTime] = useState('');\n  const [classList, setClassList] = useState([]); // 수강후기를 작성할 클래스 리스트\n  const [classImg, setClassImg] = useState(whiteImg);\n  const [isOpen, setIsOpen] = useDetectClose(dropDownRef, false);\n  const navigate = useNavigate();\n  const token = userInfo.token;\n\n  //Recoil에 저장된 예약한 클래스 아이디\n  const classId = resData.map((reservation) => reservation.class_id);\n\n  // Recoil에 저장된 예약한 클래스 날짜/시간 정보\n\n  const classDate = resData.map((reservation) => reservation.reserve_ko_date);\n  const classTime = resData.map((reservation) => reservation.reserve_time);\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      //배열로 저장된 각각의 classId map으로 순회하여 setClassList에 저장\n      try {\n        const allData = await Promise.all(\n          classId.map(async (id, index) => {\n            const data = await GetClassDetailInfoData(id, token);\n            return {\n              itemName: data.itemName,\n              itemImage: data.itemImage,\n              date: classDate[index],\n              time: classTime[index],\n            };\n          }),\n        );\n        setClassList(allData);\n      } catch (error) {\n        console.log('Error', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    // 예약 데이터에서 class_id 값을 확인\n    const hasClassId = resData.some(\n      (reservation) => reservation.class_id != null,\n    );\n\n    // 만약 class_id 값이 없으면 '/class'로 이동\n    if (!hasClassId) {\n      alert('먼저 클래스를 수강한 후 후기를 작성해주세요!');\n      navigate('/class');\n    }\n  }, [resData, navigate]);\n\n  useEffect(() => {\n    GetUserProfileImage(token, setUserImage);\n  }, [token]);\n\n  const { textarea, handleTextareaChange } = useTextareaResize(\n    inputValue,\n    setInputValue,\n  );\n\n  useEffect(() => {\n    if (inputValue || selectedImages.length > 0) {\n      setButtonStyle(true);\n    } else {\n      setButtonStyle(false);\n    }\n  }, [inputValue, selectedImages]);\n\n  const handleImageChange = async (event) => {\n    const files = event.target.files;\n    let imagesArray = [...selectedImages];\n    if (imagesArray.length + files.length > 3) {\n      alert('이미지는 최대 3개까지 업로드가 가능합니다.');\n      return;\n    }\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n\n      if (file.size > 1024 * 1024 * 10) {\n        alert('10MB 이상의 이미지는 업로드 할 수 없습니다.');\n        return;\n      }\n      if (!file.name.match(/\\.(jpg|jpeg|png|gif)$/i)) {\n        alert('이미지 파일만 업로드가 가능합니다.');\n        return;\n      }\n\n      const options = {\n        maxSizeMB: 1,\n        maxWidthOrHeight: 1920,\n        useWebWorker: true,\n      };\n\n      try {\n        const compressedFile = await imageCompression(file, options);\n        const convertedFile = new File([compressedFile], file.name, {\n          type: file.type,\n        });\n        imagesArray.push(convertedFile);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    setSelectedImages(imagesArray);\n  };\n\n  const handleUploadPost = async () => {\n    const images = await PostImagesUpload(selectedImages);\n\n    const response = await PostUploadPost(token, inputValue, images);\n\n    if (response) {\n      setInputValue('');\n      setSelectedImages([]);\n      navigate(`/post/${response.post.id}`, {\n        state: response.post.id,\n        //클래스 이름,시간, 날짜 넘겨주기\n        className: classIdentify,\n        classImg: classImg,\n        classTime: selectTime,\n        classDate: selectDate,\n      });\n    }\n  };\n\n  const handleDeleteImage = (index) => {\n    const updatedImages = [...selectedImages];\n    updatedImages.splice(index, 1);\n    setSelectedImages(updatedImages);\n  };\n\n  return (\n    <div>\n      <DisabledUploadBtnNav\n        handleUploadPost={handleUploadPost}\n        buttonStyle={buttonStyle}\n      />\n      <ProfileContainer>\n        <ProfileImage src={userImage} alt='유저 프로필 이미지' />\n      </ProfileContainer>\n\n      <DropdownContainer ref={dropDownRef}>\n        <DropdownButton onClick={() => setIsOpen(!isOpen)} type='button'>\n          <ImageBox src={classImg} />\n          <DropdonwTextContainer>\n            {classIdentify}\n            {selectDate && selectTime ? (\n              <DropdownDate date={selectDate} time={selectTime} />\n            ) : null}\n          </DropdonwTextContainer>\n        </DropdownButton>\n        {isOpen && (\n          <DropdownMenu>\n            {classList.map((item, index) => (\n              <Dropdown\n                key={index}\n                value={item.itemName}\n                date={item.date}\n                time={item.time}\n                img={item.itemImage}\n                setIsOpen={setIsOpen}\n                setClassIdentify={setClassIdentify}\n                isOpen={isOpen}\n                setClassImg={setClassImg}\n                setSelectDate={setSelectDate}\n                setSelectTime={setSelectTime}\n              />\n            ))}\n          </DropdownMenu>\n        )}\n      </DropdownContainer>\n      <PostFormStyle>\n        <TextInputContainer\n          placeholder='게시글 입력하기..'\n          onChange={handleTextareaChange}\n          ref={textarea}\n        ></TextInputContainer>\n\n        <ImgWrapStyle>\n          {selectedImages.map((image, index) => (\n            <PreviewImgWrapStyle key={index}>\n              <ImagePreview\n                src={URL.createObjectURL(image)}\n                alt={`게시글 이미지 ${index + 1}`}\n              />\n              <DeleteImgBtn\n                onClick={() => handleDeleteImage(index)}\n                type='button'\n              />\n            </PreviewImgWrapStyle>\n          ))}\n        </ImgWrapStyle>\n        <FileUploadButton handleImageChange={handleImageChange} />\n      </PostFormStyle>\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\n\nexport default function useDetectClose(ref, initialState) {\n  const [isOpen, setIsOpen] = useState(initialState);\n\n  useEffect(() => {\n    const pageClickEvent = (e) => {\n      if (ref.current && !ref.current.contains(e.target)) {\n        setIsOpen(!isOpen);\n      }\n    };\n\n    if (isOpen) {\n      window.addEventListener('click', pageClickEvent);\n    }\n\n    return () => {\n      window.removeEventListener('click', pageClickEvent);\n    };\n  }, [isOpen, ref]);\n  return [isOpen, setIsOpen];\n}\n"],"names":["GetClassDetailData","_x","_x2","_GetClassDetailData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","token","response","wrap","_context","prev","next","axios","get","concat","headers","Authorization","sent","abrupt","data","product","t0","console","log","stop","DropdownP","styled","p","_templateObject","_taggedTemplateLiteral","DropdownDate","props","date","time","_jsxs","children","DropdownItem","li","DropdonwTextContainer","div","_templateObject2","ImageBox","img","_templateObject3","DropItem","value","setClassIdentify","setClassImg","setSelectDate","setSelectTime","setIsOpen","isOpen","_jsx","_Fragment","onClick","src","DropdownContainer","DropdownButton","button","DropdownMenu","ul","Dropdown","PutPostEdit","_x3","_PutPostEdit","content","images","post","image","error","Posting","_useState","useState","_useState2","_slicedToArray","selectedImages","setSelectedImages","_useState3","_useState4","inputValue","setInputValue","_useState5","_useState6","buttonStyle","setButtonStyle","_useState7","_useState8","userImage","setUserImage","userInfo","useRecoilValue","UserAtom","resData","JSON","parse","localStorage","getItem","dropDownRef","useRef","_useState9","_useState10","classIdentify","_useState11","_useState12","selectDate","_useState13","_useState14","selectTime","_useState15","_useState16","classList","setClassList","_useState17","whiteImg","_useState18","classImg","_useDetectClose","ref","initialState","useEffect","pageClickEvent","e","current","contains","target","window","addEventListener","removeEventListener","useDetectClose","_useDetectClose2","navigate","useNavigate","classId","map","reservation","class_id","classDate","reserve_ko_date","classTime","reserve_time","fetchData","_ref","_callee2","allData","_context2","Promise","all","_ref2","index","GetClassDetailInfoData","itemName","itemImage","some","alert","GetUserProfileImage","_useTextareaResize","useTextareaResize","textarea","handleTextareaChange","length","handleImageChange","_ref3","_callee3","event","files","imagesArray","i","file","options","compressedFile","convertedFile","_context3","_toConsumableArray","size","name","match","maxSizeMB","maxWidthOrHeight","useWebWorker","imageCompression","File","type","push","handleUploadPost","_ref4","_callee4","_context4","PostImagesUpload","PostUploadPost","state","className","DisabledUploadBtnNav","ProfileContainer","ProfileImage","alt","item","PostFormStyle","TextInputContainer","placeholder","onChange","ImgWrapStyle","PreviewImgWrapStyle","ImagePreview","URL","createObjectURL","DeleteImgBtn","updatedImages","splice","handleDeleteImage","FileUploadButton"],"sourceRoot":""}